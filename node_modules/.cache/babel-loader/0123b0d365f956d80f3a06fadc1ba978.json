{"ast":null,"code":"var _jsxFileName = \"/Users/andrelogan/dev/The-Hope-Center/hope-center-app/src/components/DonationForm.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as inventoryService from '../services/InventoryService';\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nconst formValidationSchema = yup.object({\n  name: yup.string(\"enter product\").required(\"enter your product\"),\n  description: yup.string(\"enter description\").required(\"enter your description\"),\n  category: yup.string(\"enter category\").required(\"enter a category\")\n});\nconst title = {\n  color: 'blue'\n};\nexport default function DonateForm() {\n  _s();\n\n  //   const formik = useFormik({\n  //     initialValues: {\n  //       name: \"\",\n  //       description: \"\",\n  //       category: \"\"\n  //     },\n  //     validationSchema: formValidationSchema,\n  //       onSubmit:(values) => {\n  //         axios.post('http://localhost:8080/api/vi/inventory', values)\n  //         .then(response => {\n  //           console.log(response);\n  //   })\n  // }\n  // })\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [name, setName] = useState('');\n  const [category, setCategory] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const inventory = {\n      name: data.get('name'),\n      category: data.get('category'),\n      description: data.get('description')\n    };\n    inventoryService.createInventory(inventory).then(response => {\n      navigate(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          style: title,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"The Hope Center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Incoming Donations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          onSubmit: handleSubmit,\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                label: \"Name of Item\",\n                name: \"name\",\n                autoComplete: \"name\",\n                autoFocus: true,\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"category\",\n                label: \"Category\",\n                autoComplete: \"category\",\n                value: category,\n                onChange: e => setCategory(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                multiline: true,\n                rows: 7,\n                name: \"description\",\n                label: \"Description\",\n                autoComplete: \"description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DonateForm, \"JjCIKcUVB3p+x8g4V64mBJ1IhiI=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = DonateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonateForm\");","map":{"version":3,"names":["React","Button","CssBaseline","TextField","Grid","Box","Typography","Container","createTheme","ThemeProvider","yup","useNavigate","inventoryService","useState","useParams","theme","formValidationSchema","object","name","string","required","description","category","title","color","DonateForm","navigate","id","setName","setCategory","setDescription","handleSubmit","event","preventDefault","data","FormData","currentTarget","inventory","get","createInventory","then","response","marginTop","display","flexDirection","alignItems","mt","e","target","value","mb"],"sources":["/Users/andrelogan/dev/The-Hope-Center/hope-center-app/src/components/DonationForm.js"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport * as yup from \"yup\";\nimport {useNavigate } from \"react-router-dom\";\nimport * as inventoryService from '../services/InventoryService';\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n\nconst theme = createTheme();\nconst formValidationSchema = yup.object({\n  name: yup\n    .string(\"enter product\")\n    .required(\"enter your product\"),\n  description: yup\n    .string(\"enter description\")\n    .required(\"enter your description\"),\n  category: yup\n    .string(\"enter category\")\n    .required(\"enter a category\")\n})\n\n\n\nconst title={\n    color:'blue'\n}\n\nexport default function DonateForm() {\n//   const formik = useFormik({\n//     initialValues: {\n//       name: \"\",\n//       description: \"\",\n//       category: \"\"\n//     },\n//     validationSchema: formValidationSchema,\n//       onSubmit:(values) => {\n//         axios.post('http://localhost:8080/api/vi/inventory', values)\n//         .then(response => {\n//           console.log(response);\n//   })\n// }\n// })\n\n  const navigate = useNavigate();\n  const {id} = useParams();\n  const [name, setName] = useState('');\n  const [category, setCategory] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const inventory = {\n      name: data.get('name'),\n      category: data.get('category'),\n      description: data.get('description')\n    };\n\n    inventoryService.createInventory(inventory)\n    .then(response => {\n      navigate(\"/\");\n    })\n  }\n\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n         <Typography component=\"h1\" variant=\"h3\" style={title}>\n            <b>The Hope Center</b>\n         </Typography>\n         <Typography><b>Incoming Donations</b></Typography>\n         \n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  label=\"Name of Item\"\n                  name=\"name\"\n                  autoComplete=\"name\"\n                  autoFocus\n                  value={name}\n                  onChange= {(e) => setName(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"category\"\n                  label=\"Category\"\n                  autoComplete=\"category\"\n                  value={category}\n                  onChange= {(e) => setCategory(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  multiline\n                  rows={7}\n                  name=\"description\"\n                  label=\"Description\"\n                  autoComplete=\"description\"\n                  value={description}\n                  onChange= {(e) => setDescription(e.target.value)}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              submit\n            </Button>\n            \n          </Box>\n        </Box>\n       \n      </Container>\n    </ThemeProvider>\n  );\n}\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}